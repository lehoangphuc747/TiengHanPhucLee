---
// Trang danh sách bài viết blog
import Layout from '../components/common/Layout.astro';
import BlogHeader from '../components/Blog/BlogHeader.astro';
import PostList from '../components/Blog/PostList.astro';
import CategoryFilter from '../components/Blog/CategoryFilter.astro';
import TagFilter from '../components/Blog/TagFilter.astro';
import { getCollection } from 'astro:content';
import approvedTags from '../content/tags.json';

// Lấy tất cả bài viết từ content collection
const posts = await getCollection('blog');

// Sắp xếp theo ngày xuất bản (mới nhất trước)
const sortedPosts = posts.sort((a, b) => 
  new Date(b.data.publishedAt).getTime() - new Date(a.data.publishedAt).getTime()
);

// Lấy danh sách categories duy nhất
const categories = [...new Set(posts.map(post => post.data.category))].sort();
// Tạo danh sách tag theo ngữ cảnh category:
// - Category = tất cả: hiển thị các tag có ít nhất 1 bài trong toàn hệ thống
// - Category cụ thể: chỉ hiển thị các tag xuất hiện trong bài thuộc category đó
const postsInScope = posts.filter((p) => {
  const url = new URL(Astro.request.url);
  const selectedCategory = url.searchParams.get('category') || '';
  return !selectedCategory || p.data.category === selectedCategory;
});

const tagSet = new Set<string>();
for (const post of postsInScope) {
  for (const tag of (post.data.tags || [])) {
    if (approvedTags.includes(tag)) tagSet.add(tag);
  }
}
const tags = [...tagSet].sort();

// Lấy category từ query parameter
const url = new URL(Astro.request.url);
const selectedCategory = url.searchParams.get('category') || '';
const selectedTag = url.searchParams.get('tag') || '';
const selectedSubTag = url.searchParams.get('sub') || '';

// Tính sub-tags theo scope category
const subTagSet = new Set<string>();
for (const post of postsInScope) {
  for (const sub of (post.data.subTags || [])) subTagSet.add(sub);
}
const subTags = [...subTagSet].sort();
---

<Layout title="Bài viết - Phúc Lee" description="Tất cả bài viết về học tiếng Hàn và văn hóa Hàn Quốc">
  <div class="blog-page">
    <BlogHeader />
    <CategoryFilter categories={categories} currentCategory={selectedCategory} />
    <TagFilter tags={tags} currentTag={selectedTag} subTags={subTags} currentSubTag={selectedSubTag} />
    <PostList posts={sortedPosts} showTitle={false} />
  </div>
</Layout>

<style>
  .blog-page {
    max-width: 1200px;
    margin: 0 auto;
    padding: var(--spacing-xl);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .blog-page {
      padding: var(--spacing-lg);
    }
  }
</style>