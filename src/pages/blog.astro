---
// Trang danh sách bài viết blog
import Layout from '../components/common/Layout.astro';
import BlogHeader from '../components/Blog/BlogHeader.astro';
import PostList from '../components/Blog/PostList.astro';
import CategoryFilter from '../components/Blog/CategoryFilter.astro';
import { getCollection } from 'astro:content';
import approvedTags from '../content/tags.json';

// Lấy tất cả bài viết từ content collection (kèm bộ lọc phòng vệ)
const allPosts = await getCollection('blog');
const posts = allPosts.filter((p) => {
  try {
    return (
      p && p.data &&
      typeof p.data.title === 'string' &&
      typeof p.data.description === 'string' &&
      typeof p.data.category === 'string' &&
      typeof p.data.readingTime === 'number' &&
      p.data.publishedAt
    );
  } catch (_) {
    return false;
  }
});

// Sắp xếp theo ngày xuất bản (mới nhất trước)
const sortedPosts = posts.sort((a, b) => 
  new Date(b.data.publishedAt).getTime() - new Date(a.data.publishedAt).getTime()
);

// Lấy danh sách categories duy nhất
const categories = [...new Set(posts.map(post => post.data.category))].sort();
// Bỏ cơ chế filter theo tag: không cần tính toán tags theo scope nữa

// Lấy category từ query parameter
const url = new URL(Astro.request.url);
const selectedCategory = url.searchParams.get('category') || '';
// Bỏ query tag

---

<Layout title="Bài viết - Phúc Lee" description="Tất cả bài viết về học tiếng Hàn và văn hóa Hàn Quốc">
  <div class="blog-page">
    <BlogHeader />
    <CategoryFilter categories={categories} currentCategory={selectedCategory} />
    <PostList posts={sortedPosts} showTitle={false} />
  </div>
</Layout>

<style>
  .blog-page {
    max-width: 1200px;
    margin: 0 auto;
    padding: var(--spacing-xl);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .blog-page {
      padding: var(--spacing-lg);
    }
  }
</style>