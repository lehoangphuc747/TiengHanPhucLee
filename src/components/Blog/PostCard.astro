---
// Component hiển thị card bài viết blog
// Tuân thủ phong cách minimalist, không gradient

export interface Props {
  post: {
    slug: string;
    data: {
      title: string;
      description: string;
      publishedAt: Date;
      category: string;
      tags: string[];
      readingTime: number;
      featured?: boolean;
    };
  };
  className?: string;
}

const { post, className = '' } = Astro.props;

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('vi-VN', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};
---

<article class={`post-card ${className}`}>
  <div class="post-card__header">
    <span class="post-card__category">{post.data.category}</span>
    <time class="post-card__date">
      {formatDate(post.data.publishedAt)}
    </time>
  </div>
  
  <h3 class="post-card__title">
    <a href={`/blog/${post.slug}`} class="post-card__link">
      {post.data.title}
    </a>
  </h3>
  
  <p class="post-card__description">
    {post.data.description}
  </p>
  
  <div class="post-card__footer">
    <div class="post-card__tags">
      {post.data.tags.slice(0, 3).map((tag) => (
        <span class="post-card__tag">#{tag}</span>
      ))}
    </div>
    <span class="post-card__reading-time">
      {post.data.readingTime} phút đọc
    </span>
  </div>
</article>

<style>
  .post-card {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: var(--spacing-xl);
    transition: all var(--transition-fast);
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .post-card:hover {
    box-shadow: var(--shadow-md);
    border-color: var(--color-primary);
  }

  .post-card__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-md);
    font-size: var(--font-size-sm);
  }

  .post-card__category {
    background: var(--color-primary);
    color: white;
    padding: var(--spacing-xs) var(--spacing-sm);
    border-radius: var(--radius-sm);
    font-weight: var(--font-weight-medium);
    font-size: var(--font-size-xs);
  }

  .post-card__date {
    color: var(--color-text-light);
    font-weight: var(--font-weight-medium);
  }

  .post-card__title {
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text);
    margin-bottom: var(--spacing-sm);
    line-height: var(--line-height-tight);
  }

  .post-card__link {
    color: inherit;
    text-decoration: none;
    transition: color var(--transition-fast);
  }

  .post-card__link:hover {
    color: var(--color-primary);
  }

  .post-card__description {
    color: var(--color-text-muted);
    line-height: var(--line-height-relaxed);
    margin-bottom: var(--spacing-lg);
    flex: 1;
  }

  .post-card__footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: auto;
    padding-top: var(--spacing-md);
    border-top: 1px solid var(--color-border-light);
  }

  .post-card__tags {
    display: flex;
    gap: var(--spacing-xs);
    flex-wrap: wrap;
  }

  .post-card__tag {
    background: var(--color-surface-alt);
    color: var(--color-text-muted);
    padding: var(--spacing-xs) var(--spacing-sm);
    border-radius: var(--radius-sm);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
  }

  .post-card__reading-time {
    color: var(--color-text-light);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .post-card {
      padding: var(--spacing-lg);
    }
    
    .post-card__header {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--spacing-xs);
    }
    
    .post-card__footer {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--spacing-sm);
    }
  }
</style>
